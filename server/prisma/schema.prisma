// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        BigInt   @id @default(autoincrement())
  email     String   @unique
  fullName  String
  userName  String
  password  String
  role String
    isActive     Boolean
  isDeleted    Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HrUser {
  id        BigInt    @id @default(autoincrement())
  email     String    @unique
  fullName  String
  userName  String
  password  String
  role String
    isActive     Boolean
  isDeleted    Boolean
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  jobs      JobPost[]
}
model JobSeekerUser {
  id           BigInt        @id @default(autoincrement())
  email        String        @unique
  fullName     String
  userName     String
  password     String
  role         String
  isActive     Boolean
  isDeleted    Boolean
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  applications Application[]
}

model JobPost {
  id                 BigInt           @id @default(autoincrement())
  jobTitle           Int
  jobLocation        Int
  numberOfOpenings   Int
  area               Int
  experience         Int
  monthlyInHand      String
  isBonusAvailable   Boolean
  jobDescription     String
  skills             Int
  preferredLanguage  String?
  age                String?
  certification      String?
  specialization     String?
  // employmentType EmploymentType
  employmentType     String
  interviewMethod    String
  companyName        String
  sizeOfOrganisation String
  jobAddress         String
  phoneNumber        String
  emailId            String
  isActive           Boolean   @default(true)
  isDeleted          Boolean  @default(false)
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  hrId               BigInt
  hr                 HrUser        @relation(fields: [hrId], references: [id])
  applications       Application[]
}


model Application {
  id          BigInt           @id @default(autoincrement())
  coverLetter String
  resume      String // URL or file path to resume
  appliedAt   DateTime      @default(now())
  jobPostId   BigInt           @unique
  jobSeekerId BigInt        @unique
  jobPost     JobPost       @relation(fields: [jobPostId], references: [id])
  jobSeeker   JobSeekerUser @relation(fields: [jobSeekerId], references: [id])
}

model Sector {
  id       Int          @id @default(autoincrement())
  name     String       @unique
  isActive           Boolean   @default(true)
  isDeleted          Boolean  @default(false)
  category Categories[]
}

model Categories {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  sectorId Int
  sector   Sector     @relation(fields: [sectorId], references: [id])
  jobTitle JobTitle[]
    isActive           Boolean   @default(true)
  isDeleted          Boolean  @default(false)
}

model JobTitle {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  categoryId Int
  category   Categories @relation(fields: [categoryId], references: [id])
  skills     Skills[]
    isActive           Boolean   @default(true)
  isDeleted          Boolean  @default(false)
}

model Skills {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  jobTitleId Int
  jobTitle   JobTitle @relation(fields: [jobTitleId], references: [id])
    isActive           Boolean   @default(true)
  isDeleted          Boolean  @default(false)
}

// enum EmploymentType {
//   FULL_TIME
//   PART_TIME
//   INTERNSHIP
//   FREELANCE
//   OTHER
// }
